/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#include "mousedefs.h"
// #include <dt-bindings/zmk/backlight.h>

#define BASE   0
#define EXTRA  1
#define SIMPLE  2
#define BUTTON 3
#define NUM    4
#define FUN    5
#define NAV    6
#define SYM    7

/ {
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
   &kp Q          &ltg SIMPLE W  &kp E       &kp R           &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
   &hm LGUI A     &hm LALT S     &hm LCTRL D &hm LSHFT F     &kp G         &kp H            &hm RSHFT J    &hm RCTRL K &hm RALT L &hm RGUI SEMI
   &ltp BUTTON Z  &kp X          &kp C       &kp V           &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &ltp BUTTON FSLH
                                             &ltp NUM SPACE  &ltp FUN TAB   &ltp NAV ENTER   &ltp SYM BSPC
            >;
        };

        extra_layer {
            label = "Mac";
// -----------------------------------------------------------------------------------------
// Interrup activated modkeys
            bindings = <
   &ltg BASE Q     &kp W      &kp E       &kp R         &kp T          &kp Y        &kp U          &kp I        &kp O       &kp P 
   &hm LGUI A      &hm LALT S &hm LCTRL D &hm LSHIFT F  &kp G          &kp H        &hm RSHIFT J   &hm RCTRL K  &hm RALT L  &hm RGUI SEMI 
   &ltp BUTTON Z   &kp X      &kp C       &kp V         &kp B          &kp N        &kp M          &kp COMMA    &kp DOT     &ltp BUTTON FSLH 
                                          &ltp NUM SPC  &ltp FUN TAB   &ltp NAV RET &ltp SYM BSPC
            >;
        };
        simple_layer {
            label = "Simple";
// -----------------------------------------------------------------------------------------
// same as base, but smaller times
            bindings = <
   &ltg BASE Q         &ltg EXTRA  W  &kp E  &kp R  &kp T   &kp Y  &kp U  &kp I      &kp O    &kp P
   &kp  A              &kp S          &kp D  &kp F  &kp G   &kp H  &kp J  &kp K      &kp L    &kp SEMI
   &crz NON_US_BSLH Z  &kp X          &kp C  &kp V  &kp B   &kp N  &kp M  &kp COMMA  &kp DOT  &kp FSLH
                               &ltp NUM SPC  &ltp FUN TAB   &kp RET &kp BSPC
            >;
        };
        button_layer {
            label = "Button";
// -----------------------------------------------------------------------------------------
// |       | OBT | OTOG | OUSB | BOOT |   |     |      |       |      |     |     |
// |  BT1  | BT2 | BT3  | BT4  | BT5  |   |     | PREV | PLAYP | NEXT | STP |     |
// | BTCLR | BLE | UBT  |      | RST  |   |     | VDN  | MUTE  | VUP  |     |     |
//                           |      | SPC  |   | ENT |      | ALT   |
            bindings = <
   &bt BT_CLR   &out OUT_BLE &out OUT_TOG &out OUT_USB &reset         &reset       &trans       &trans     &trans       &trans     
   &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans       &kp C_PREV   &kp C_PP   &kp C_NEXT   &kp C_STOP 
   &trans       &kp LALT     &kp LCTRL    &kp LSHIFT   &bootloader    &bootloader  &kp C_VOL_DN &kp C_MUTE &kp C_VOL_UP &trans     
                                          &trans       &kp SPACE      &kp RET      &trans
//                 &rgb_ug RGB_SAI,   &rgb_ug RGB_HUI,   &kp C_VOL_UP,      &rgb_ug RGB_EFF,   &rgb_ug RGB_TOG
            >;
        };

        num_layer {
            label = "Num";
// -----------------------------------------------------------------------------------------
// |   TAB  |  7  |  8  |  9  |  0  |   |  6  |  7  |  8  |  9  |  0  |
// |  CTRL  |  4  |  5  |  6  |  0  |   |  -  |  =  |  [  |  ]  |  \  |
// |  SHFT  |  1  |  2  |  3  |  0  |   |  _  |  +  |  {  |  }  | "|" |
//                      |     | SPC |   | ENT | DEL |
            bindings = <
   &kp LALT   &kp N7  &kp N8   &kp N9 &kp N0      &kp N6     &kp N7    &kp N8    &kp N9    &kp N0
   &kp LCTRL  &kp N4  &kp N5   &kp N6 &kp ESC     &kp TILDE  &kp LSHFT  &kp LCTRL  &kp LALT  &kp LGUI
//  &kp MINUS &kp EQUAL &kp LBKT  &kp RBKT  &kp BSLH  &kp GRAVE
   &kp LSHFT  &kp N1  &kp N2   &kp N3 &kp GRAVE   &kp UNDER  &kp PLUS  &kp LBRC  &kp RBRC  &kp PIPE
                    	       &trans &kp SPACE   &kp RET   &kp DEL
            >;
        };

        fun_layer {
            label = "Fun";
// -----------------------------------------------------------------------------------------
// |   |  SHFT  |  F9  |  F6   |  F3  |  F12  |   |    |         |               |        |  Bootloader  |   |
// |   |  CTRL  |  F8  |  F5   |  F2  |  F11  |   |    |  GUI    |      ALT      |  CTRL  |     SHFT     |   |
// |   |  ALT   |  F7  |  F4   |  F1  |  F10  |   |    |  PSCRN  |  PAUSE_BREAK  |  SLCK  |              |   |
//                   |      |       |      |       |   |    |          |
            bindings = <
   &kp LSHFT    &kp F9   &kp F6   &kp F3   &kp F12     &trans   U_BTN1  U_BTN2  U_BTN3  &trans  
   &kp LCTRL    &kp F8   &kp F5   &kp F2   &kp F11     U_MS_L   U_MS_D  U_MS_U  U_MS_R  &trans
   &kp LALT     &kp F7   &kp F4   &kp F1   &kp F10     U_WH_L   U_WH_D  U_WH_U  U_WH_R  &trans
                                  &trans   &trans      &trans  &trans
            >;
        };
        nav_layer {
            label = "Nav";
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |      |      |     |   | SDN | SDN | SCUP | SCUP |     |   |
// | CTRL | GUI | ALT | CTRL | SHFT |     |   | LFT | DWN |  UP  | RGHT |     |   |
// | SHFT |     |     |      |      |     |   | INS | HOM | PGUP | PGDN | END |   |
//                    | ESC  | SPCE | TAB |   | RET | BSP | DEL |
                                           bindings = <
// &bootloader &trans &trans U_NA     U_NA    U_RDO       U_PST    U_CPY   U_CUT  U_UND
   &trans    &trans     &trans           &trans     &trans     &trans    &trans     &trans     &trans     &kp ESC
   &kp LGUI  &kp LALT   &kp LCTRL        &kp LSHFT  &trans     &kp LEFT  &kp DOWN   &kp UP     &kp RIGHT  &kp DEL
   &trans    &kp PSCRN  &kp PAUSE_BREAK  &kp SLCK   &trans     &kp HOME  &kp PG_DN  &kp PG_UP  &kp END    &kp BSPC
                                         &kp SPACE  &kp TAB    &kp RET   &kp BSPC
            >;
        };
        sym_layer {
            label = "Sym";
// -----------------------------------------------------------------------------------------
// |  ,  |  /  |  *  |  -  |  +  |   |  ~  |  `  |  0  |  Ü  |  Ó  |
// |  ^  |  &  |  *  |  (  |  )  |   |  =  |  <  |  >  | [Ő  | ]Ú  |
// |  !  |  @  |  #  |  $  |  %  |   |  +  |  {  |  }  |  Ő  |  Ű  |
//                    | ESC | SPC | TAB |   | RET | BSP | DEL |
            bindings = <
// &kp PIPE ==? altgr + W;  kp KP_SUBTRACT ==? &kp MINUS; &kp UNDER ==? SHIFT + MINUS; EXCL == Altgr + 4 == "!"       
   &kp KP_COMMA     &kp KP_SLASH   &kp KP_ASTERISK       &kp KP_SUBTRACT  &kp KP_PLUS    &kp TILDE         &kp GRAVE     &kp N0       &kp MINUS      &kp EQUAL
   &hm LGUI CARET   &hm LALT AMPS  &hm LCTRL KP_MULTIPLY &hm LSHIFT LPAR  &kp RPAR       &hm RSHIFT EQUAL  &hm RCTRL GT  &hm RALT LT  &hm RGUI LBKT  &kp RBKT
   &kp NON_US_BSLH  &kp AT         &kp HASH              &kp DLLR         &kp PRCNT      &kp PLUS          &kp LBRC      &kp RBRC     &kp QUOT       &kp BSLH
                    	                               &kp SPACE        &kp TAB        &kp RET           &kp BSPC
            >;
        };
    };
};


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hsp: homerow_crazymode {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_HOTKEY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        crz: homerow_crazymode {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_CRAZY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        ltg: layer_toggler {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TOGGLER";
            #binding-cells = <2>;
            tapping_term_ms = <1200>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
        ltp: layer_tapper {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAPPER";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
    };
};