/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/mouse.h>

#include "mousedefs.h"
// #include <dt-bindings/zmk/backlight.h>

#define BASE   0
#define EXTRA  1
#define CRAZY  2
#define BUTTON 3
#define NUM    4
#define FUN    5
#define NAV    6
#define MEDIA  7
#define SYM    8
#define MOUSE  9

#define NAV_L 1
#define OTHER_L 2
#define NUM_L 3
#define SYM_L 4

// Using layer taps on thumbs, having quick tap as well helps w/ repeating space/backspace
&lt { quick_tap_ms = <200>; };

/ {
    
    keymap {
        compatible = "zmk,keymap";

        default_layer {
            bindings = <
                &kp Q      &kp W      &kp E       &kp R          &kp T         &kp Y            &kp U          &kp I       &kp O      &kp P
                &hm LGUI A &hm LALT S &hm LCTRL D &hm LSHFT F    &kp G         &kp H            &hm RSHFT J    &hm RCTRL K &hm LALT L &hm LGUI QUOT
                &kp Z      &kp X      &kp C       &kp V          &kp B         &kp N            &kp M          &kp COMMA   &kp DOT    &kp FSLH
                                                  &lt NAV_L SPACE  &kp TAB     &lt NUM_L ENTER  &lt SYM_L BKSP
            >;
        };

        nav_layer {
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp LARW       &kp DARW    &kp UARW   &kp RARW
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &kp PG_DN   &kp PG_UP  &kp END
                                                  &trans          &trans       &kp ESC          &kp DEL
            >;
        };

        other_layer {
            bindings = <
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &trans         &trans      &trans     &trans
                &trans     &trans     &trans      &trans          &trans       &trans           &kp HOME       &trans      &trans     &trans
                                                  &trans          &trans       &trans           &trans
            >;
        };

        num_layer {
            bindings = <
                &kp LBKT   &kp N7     &kp N8      &kp N9          &kp RBKT      &trans          &trans         &trans      &trans     &trans
                &kp SEMI   &kp N4     &kp N5      &kp N6          &kp EQUAL     &trans          &trans         &trans      &trans     &trans
                &kp GRAVE  &kp N1     &kp N2      &kp N3          &kp BSLH      &trans          &trans         &trans      &trans     &trans
                                                  &kp N0          &kp MINUS     &trans          &trans
            >;
        };

        sym_layer_ {
            bindings = <
                &kp LBRC     &kp LS(N7)  &kp LS(N8)  &kp LS(N9) &kp RBRC       &trans &trans   &trans    &trans    &trans
                &kp COLON     &kp LS(N4)  &kp LS(N5)  &kp LS(N6) &kp PLUS       &trans &trans   &trans    &trans    &trans
                &kp TILDE     &kp LS(N1)  &kp LS(N2)  &kp LS(N3) &kp LS(BSLH)       &trans &trans   &trans    &trans    &trans
                                                   &kp LS(N0) &kp UNDER   &trans &trans
            >;
        };
                nav_layer {
                        label = "Nav";
// -----------------------------------------------------------------------------------------
// |  TAB |     |     |      |      |     |   | SDN | SDN | SCUP | SCUP |     |   |
// | CTRL | GUI | ALT | CTRL | SHFT |     |   | LFT | DWN |  UP  | RGHT |     |   |
// | SHFT |     |     |      |      |     |   | INS | HOM | PGUP | PGDN | END |   |
//                    | ESC  | SPCE | TAB |   | RET | BSP | DEL |
                                           bindings = <

// &bootloader &trans &trans U_NA     U_NA    U_RDO       U_PST    U_CPY   U_CUT  U_UND
   &trans    U_WH_L    U_WH_D          U_WH_U     U_WH_R     &trans     &trans      &trans  &trans     &kp ESC
   &kp LGUI  &kp LALT  &kp LCTRL       &kp LSHFT  &trans     &kp LEFT   &kp DOWN   &kp UP   &kp RIGHT  &kp DEL
   &trans  &kp PSCRN  &kp PAUSE_BREAK  &kp SLCK   &kp HOME   &kp PG_DN  &kp PG_UP  &kp END         &kp BSPC
                                  &kp SPACE  &kp TAB    &kp RET  &kp BSPC
                        >;
                };
                sym_layer {
                        label = "Sym";
// -----------------------------------------------------------------------------------------
// |  ,  |  /  |  *  |  -  |  +  |   |  ~  |  `  |  0  |  Ü  |  Ó  |
// |  ^  |  &  |  *  |  (  |  )  |   |  =  |  <  |  >  | [Ő  | ]Ú  |
// |  !  |  @  |  #  |  $  |  %  |   |  +  |  {  |  }  |  Ő  |  Ű  |
//                    | ESC | SPC | TAB |   | RET | BSP | DEL |
                        bindings = <
// &kp PIPE ==? altgr + W;  kp KP_SUBTRACT ==? &kp MINUS; &kp UNDER ==? SHIFT + MINUS        
   &kp KP_COMMA   &kp KP_SLASH   &kp KP_ASTERISK       &kp KP_SUBTRACT  &kp KP_PLUS    &kp TILDE         &kp GRAVE     &kp N0       &kp MINUS      &kp EQUAL
   &hm LGUI CARET &hm LALT AMPS  &hm LCTRL KP_MULTIPLY &hm LSHIFT LPAR  &kp RPAR       &hm RSHIFT EQUAL  &hm RCTRL GT  &hm RALT LT  &hm RGUI LBKT  &kp RBKT
   &kp EXCL       &kp AT         &kp HASH              &kp DLLR         &kp PRCNT      &kp PLUS          &kp LBRC      &kp RBRC     &kp LBKT       &kp BSLH
                    	                               &kp SPACE        &kp TAB        &kp RET           &kp BSPC
                        >;
                };
    };
};


/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "homerow mods";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        hsp: homerow_crazymode {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_HOTKEY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;
        };
        crz: homerow_crazymode {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_CRAZY";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "hold-preferred";
            bindings = <&kp>, <&kp>;
        };
        ltg: layer_toggler {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TOGGLER";
            #binding-cells = <2>;
            tapping_term_ms = <1200>;
            flavor = "tap-preferred";
            bindings = <&to>, <&kp>;
        };
        ltp: layer_tapper {
            compatible = "zmk,behavior-hold-tap";
            label = "LAYER_TAPPER";
            #binding-cells = <2>;
            tapping_term_ms = <200>;
            flavor = "balanced";
            bindings = <&mo>, <&kp>;
        };
    };
};
&mmv {
  acceleration-exponent = <U_MOUSE_MOVE_EXPONENT>;
  time-to-max-speed-ms = <U_MOUSE_MOVE_TIME>;
  delay-ms = <U_MOUSE_MOVE_DELAY>;
};